{
  "name": "–ê—Ä–æ–º–∞-–ü–æ–º–æ—â–Ω–∏–∫ - –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç",
  "nodes": [
    {
      "parameters": {
        "updates": ["message", "callback_query"],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [384, -144],
      "id": "telegram-trigger",
      "name": "Telegram Trigger",
      "webhookId": "main-webhook",
      "credentials": {
        "telegramApi": {
          "id": "telegram-credentials",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤\nconst input = $input.first();\n\nif (!input || !input.json) {\n  return [{\n    json: {\n      originalText: '',\n      requestType: 'error',\n      chatId: 'unknown',\n      error: 'No input data'\n    }\n  }];\n}\n\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback queries\nif (input.json.callback_query) {\n  const callbackData = input.json.callback_query.data || '';\n  const chatId = input.json.callback_query.message.chat.id;\n  const userName = input.json.callback_query.from.first_name || 'User';\n  \n  return [{\n    json: {\n      originalText: `callback:${callbackData}`,\n      requestType: 'callback_query',\n      chatId: chatId,\n      userName: userName,\n      callbackData: callbackData,\n      callbackQueryId: input.json.callback_query.id\n    }\n  }];\n}\n\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\nconst rawText = (input.json.message?.text || '').trim();\nconst chatId = input.json.message?.chat?.id || 'unknown';\nconst userName = input.json.message?.from?.first_name || 'User';\n\nif (!rawText) {\n  return [{\n    json: {\n      originalText: '',\n      requestType: 'empty_message',\n      chatId: chatId,\n      error: 'No text provided'\n    }\n  }];\n}\n\n// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞\nconst normalizedText = rawText.toLowerCase()\n  .replace(/[.,!?;:()\\\"]/g, ' ')\n  .replace(/\\s+/g, ' ')\n  .trim();\n\n// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞\nlet requestType = 'unknown';\nlet oilName = null;\nlet mood = null;\nlet keywords = [];\n\n// –ö–æ–º–∞–Ω–¥—ã\nif (rawText.startsWith('/')) {\n  const command = rawText.split(' ')[0];\n  switch (command) {\n    case '/start':\n      requestType = 'start_command';\n      break;\n    case '/help':\n      requestType = 'help_command';\n      break;\n    case '/menu':\n      requestType = 'menu_command';\n      break;\n    default:\n      requestType = 'unknown_command';\n  }\n}\n// –ü–æ–∏—Å–∫ –º–∞—Å–µ–ª\nelse if (/–ª–∞–≤–∞–Ω–¥–∞|—ç–≤–∫–∞–ª–∏–ø—Ç|–º—è—Ç–∞|–ª–∏–º–æ–Ω|–∞–ø–µ–ª—å—Å–∏–Ω|—Ä–æ–∑–∞|–∂–∞—Å–º–∏–Ω|—á–∞–π–Ω–æ–µ –¥–µ—Ä–µ–≤–æ|—Ä–æ–∑–º–∞—Ä–∏–Ω/.test(normalizedText)) {\n  requestType = 'oil_search';\n  oilName = rawText;\n}\n// –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\nelse if (/—Å—Ç—Ä–µ—Å—Å|—É—Å—Ç–∞–ª|–≥—Ä—É—Å—Ç–Ω|–±–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞|—ç–Ω–µ—Ä–≥–∏–∏|—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ|—Ä–∞–¥–æ—Å—Ç—å/.test(normalizedText)) {\n  requestType = 'mood_request';\n  mood = rawText;\n  keywords = ['–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '—ç–º–æ—Ü–∏–∏'];\n}\n// –ü–æ–¥–ø–∏—Å–∫–∏\nelse if (/–ø–æ–¥–ø–∏—Å|—É–≤–µ–¥–æ–º–ª–µ–Ω|—Ä–∞—Å—Å—ã–ª–∫/.test(normalizedText)) {\n  requestType = 'subscription_inquiry';\n  keywords = ['–ø–æ–¥–ø–∏—Å–∫–∞'];\n}\n// –ú—É–∑—ã–∫–∞\nelse if (/–º—É–∑—ã–∫–∞|–ø–µ—Å–Ω—è|–ø–ª–µ–π–ª–∏—Å—Ç|–ø–æ—Å–ª—É—à–∞—Ç—å/.test(normalizedText)) {\n  requestType = 'music_request';\n  keywords = ['–º—É–∑—ã–∫–∞'];\n}\n// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è\nelse if (/–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|–¥–æ–±—Ä/.test(normalizedText)) {\n  requestType = 'greeting';\n}\n\nreturn [{\n  json: {\n    originalText: rawText,\n    normalizedText: normalizedText,\n    requestType: requestType,\n    chatId: chatId,\n    userName: userName,\n    oilName: oilName,\n    mood: mood,\n    keywords: keywords,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [560, -144],
      "id": "smart-router",
      "name": "Smart Router"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "start-condition",
              "leftValue": "={{ $json.requestType }}",
              "rightValue": "start_command",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1280, -144],
      "id": "if-start-command",
      "name": "IF Start Command"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "oil-search-condition",
              "leftValue": "={{ $json.requestType }}",
              "rightValue": "oil_search",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1280, -80],
      "id": "if-oil-search",
      "name": "IF Oil Search"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "mood-condition",
              "leftValue": "={{ $json.requestType }}",
              "rightValue": "mood_request",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1280, -16],
      "id": "if-mood-request",
      "name": "IF Mood Request"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "üåø **–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ê—Ä–æ–º–∞-–ø–æ–º–æ—â–Ω–∏–∫!** üåø\n\n‚ú® **–ß—Ç–æ —è —É–º–µ—é:**\n\nüîç **–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ª—é–±–æ–µ –º–∞—Å–ª–æ:**\n- –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏: \"–º—è—Ç–∞\", \"–ª–∞–≤–∞–Ω–¥–∞\", \"–ª–∏–º–æ–Ω\"\n- –ò–ª–∏: \"—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —ç–≤–∫–∞–ª–∏–ø—Ç\"\n\nü§ñ **–î–∞—Ç—å –Ω–∞—É—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n- \"–Ω—É–∂–Ω–∞ —ç–Ω–µ—Ä–≥–∏—è\" ‚Üí —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏\n- \"—Ö–æ—á—É —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è\" ‚Üí —Å–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤\n- \"–ø—Ä–æ—Å—Ç—É–¥–∞\" ‚Üí –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ª–µ—á–µ–Ω–∏–∏\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç! üòä",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    "additionalFields": {
                      "callback_data": "main_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1472, -336],
      "id": "start-response",
      "name": "Start Response",
      "webhookId": "start-webhook",
      "credentials": {
        "telegramApi": {
          "id": "telegram-credentials",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "oils",
        "filters": {
          "conditions": [
            {
              "keyName": "oil_name",
              "condition": "ilike",
              "keyValue": "=%{{ $json.oilName }}%"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1728, -240],
      "id": "supabase-oil-search",
      "name": "Supabase Oil Search",
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –º–∞—Å–ª–∞\nconst supabaseResults = $input.all();\nconst smartRouterData = $('Smart Router').first().json;\n\nif (!Array.isArray(supabaseResults) || supabaseResults.length === 0) {\n  return [{\n    json: {\n      error: \"–ú–∞—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\",\n      searchedName: smartRouterData.oilName,\n      chatId: smartRouterData.chatId,\n      suggestions: [\n        '–ü–æ–ø—Ä–æ–±—É–π: \"–õ–∞–≤–∞–Ω–¥–∞\" - –¥–ª—è —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è',\n        '–ü–æ–ø—Ä–æ–±—É–π: \"–ú—è—Ç–∞ –ø–µ—Ä–µ—á–Ω–∞—è\" - –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏',\n        '–ü–æ–ø—Ä–æ–±—É–π: \"–õ–∏–º–æ–Ω\" - –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è'\n      ]\n    }\n  }];\n}\n\nconst foundOil = supabaseResults[0].json;\n\nreturn [{\n  json: {\n    oil_name: foundOil.oil_name,\n    description: foundOil.description,\n    emotional_effect: foundOil.emotional_effect,\n    physical_effect: foundOil.physical_effect,\n    applications: foundOil.applications,\n    safety_warning: foundOil.safety_warning,\n    joke: foundOil.joke,\n    keywords: foundOil.keywords,\n    chatId: smartRouterData.chatId\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1984, -288],
      "id": "oil-response-formatter",
      "name": "Oil Response Formatter"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "={{(() => {\n  if ($json.error) {\n    const suggestions = $json.suggestions || [];\n    const searchedName = $json.searchedName || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–∞—Å–ª–æ';\n    \n    let message = `üîç –ù–µ –Ω–∞—à–µ–ª –º–∞—Å–ª–æ \"${searchedName}\".\\n\\n`;\n    \n    if (suggestions.length > 0) {\n      message += `üí° –í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –∏—Å–∫–∞–ª:\\n`;\n      suggestions.slice(0, 5).forEach(suggestion => {\n        message += `‚Ä¢ ${suggestion}\\n`;\n      });\n      message += '\\n';\n    }\n    \n    message += `üéØ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–∫–∞—Ç—å:\\n`;\n    message += `‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ: \"–ª–∞–≤–∞–Ω–¥–∞\", \"–º—è—Ç–∞\"\\n`;\n    message += `‚Ä¢ –° –∫–æ–º–∞–Ω–¥–æ–π: \"—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —ç–≤–∫–∞–ª–∏–ø—Ç\"\\n`;\n    message += `‚Ä¢ –ü–æ —ç—Ñ—Ñ–µ–∫—Ç—É: \"–Ω—É–∂–Ω–∞ —ç–Ω–µ—Ä–≥–∏—è\", \"—Ö–æ—á—É —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è\"`;\n    \n    return message;\n  }\n  \n  let message = `üåø ${$json.oil_name}\\n${$json.description}\\n\\n`;\n  message += `üß† –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç:\\n${$json.emotional_effect}\\n\\n`;\n  message += `üí™ –§–∏–∑–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç:\\n${$json.physical_effect}\\n\\n`;\n  message += `üß¥ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:\\n${$json.applications}\\n\\n`;\n  message += `‚ö†Ô∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ:\\n${$json.safety_warning}\\n\\n`;\n  \n  if ($json.keywords) {\n    message += `üè∑Ô∏è –ö–ª—é—á–µ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞: ${$json.keywords}\\n\\n`;\n  }\n  \n  message += `üòÑ –ö—Å—Ç–∞—Ç–∏:\\n${$json.joke}`;\n  \n  return message;\n})()}}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    "additionalFields": {
                      "callback_data": "main_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [2240, -320],
      "id": "telegram-oil-response",
      "name": "Telegram Oil Response",
      "webhookId": "oil-response-webhook",
      "credentials": {
        "telegramApi": {
          "id": "telegram-credentials",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "oils"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1728, -80],
      "id": "get-all-oils",
      "name": "Get All Oils",
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [2944, 64],
      "id": "openai-model",
      "name": "OpenAI Model",
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∞—Ä–æ–º–∞—Ç–µ—Ä–∞–ø–µ–≤—Ç, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –±—ã—Å—Ç—Ä—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.\n\nüá∑üá∫ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ!\n\nüìã –ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: {{ $json.originalText }}\nüéØ –ù–ê–°–¢–†–û–ï–ù–ò–ï: {{ $json.mood }}\nüîç –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê: {{ $json.keywords ? $json.keywords.join(\", \") : \"–Ω–µ —É–∫–∞–∑–∞–Ω—ã\" }}\n\nüìö –î–û–°–¢–£–ü–ù–´–ï –ú–ê–°–õ–ê –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•:\n{{ $json.oilsData ? $json.oilsData.slice(0, 12).map(oil => `- **${oil.json.oil_name}**: ${oil.json.applications || '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}`).join('\\n') : '–î–∞–Ω–Ω—ã–µ –æ –º–∞—Å–ª–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã' }}\n\nüö® –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–¢–í–ï–¢–£:\n- –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–∞—Å–ª–∞ –∏–∑ –±–∞–∑—ã –≤—ã—à–µ\n- –£–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω—ã–µ –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –≤ –∫–∞–ø–ª—è—Ö\n- –î–∞–≤–∞–π —á–µ—Ç–∫–∏–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n- –í–∫–ª—é—á–∞–π –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã\n- –î–µ–ª–∞–π –æ—Ç–≤–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º –∏ –ø—Ä–∏–º–µ–Ω–∏–º—ã–º\n\nüá∑üá∫ –§–û–†–ú–ê–¢ –ë–´–°–¢–†–û–ì–û –†–£–°–°–ö–û–ì–û –û–¢–í–ï–¢–ê:\n\nüéØ **–î–ª—è {{ $json.mood || \"–≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞\" }}** –±—ã—Å—Ç—Ä–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\nüåø **[–ù–ê–ó–í–ê–ù–ò–ï –ú–ê–°–õ–ê –ò–ó –ë–ê–ó–´]** \nüí° **–ü–†–ò–ú–ï–ù–ï–ù–ò–ï:**\n   ‚Ä¢ **–û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–±:** [–¥–æ–∑–∏—Ä–æ–≤–∫–∞ –≤ –∫–∞–ø–ª—è—Ö] + [–±–∞–∑–æ–≤–æ–µ –º–∞—Å–ª–æ], [–∫–∞–∫ –ø—Ä–∏–º–µ–Ω—è—Ç—å]\n   ‚Ä¢ **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:** [–¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± —Å –¥–æ–∑–∏—Ä–æ–≤–∫–æ–π]\n   ‚Ä¢ **–ß–∞—Å—Ç–æ—Ç–∞:** [—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å]\n\nüß¥ **–ë–´–°–¢–†–´–ï –†–ï–¶–ï–ü–¢–´:**\n\n**‚ö° –î–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**\n- [–ú–∞—Å–ª–æ 1]: X –∫–∞–ø–µ–ª—å\n- [–ú–∞—Å–ª–æ 2]: Y –∫–∞–ø–µ–ª—å\n- –ë–∞–∑–æ–≤–æ–µ –º–∞—Å–ª–æ: Z –º–ª\n- **–ö–∞–∫ –ø—Ä–∏–º–µ–Ω—è—Ç—å:** [–ø—Ä–æ—Å—Ç—ã–µ —à–∞–≥–∏]\n\n‚è∞ **–ë–´–°–¢–†–´–ô –ü–õ–ê–ù:**\nüåÖ **–°–µ–π—á–∞—Å:** [—á—Ç–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ]\nüåÜ **–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:** [–ø—Ä–æ—Å—Ç–∞—è —Ä—É—Ç–∏–Ω–∞]\n\n‚ö†Ô∏è **–û–°–ù–û–í–ù–´–ï –ú–ï–†–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:**\n- –í—Å–µ–≥–¥–∞ —Ä–∞–∑–±–∞–≤–ª—è—Ç—å –±–∞–∑–æ–≤—ã–º –º–∞—Å–ª–æ–º\n- –¢–µ—Å—Ç –Ω–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n- –ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –Ω–∞ —Å–ª–∏–∑–∏—Å—Ç—ã—Ö\n\n‚ùå –ë–ï–ó: —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π, –¥–ª–∏–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤\n‚ö° –ì–õ–ê–í–ù–û–ï: –±—ã—Å—Ç—Ä—ã–µ, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ —Å–æ–≤–µ—Ç—ã\nüá∑üá∫ –Ø–ó–´–ö: —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π!",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [2960, -208],
      "id": "ai-agent-fast",
      "name": "AI Agent Fast"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.output }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    "additionalFields": {
                      "callback_data": "main_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [3424, -176],
      "id": "telegram-ai-response",
      "name": "Telegram AI Response",
      "webhookId": "ai-response-webhook",
      "credentials": {
        "telegramApi": {
          "id": "telegram-credentials",
          "name": "Telegram Bot"
        }
      }
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Smart Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Smart Router": {
      "main": [
        [
          {
            "node": "IF Start Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Oil Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Mood Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Start Command": {
      "main": [
        [
          {
            "node": "Start Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Oil Search": {
      "main": [
        [
          {
            "node": "Supabase Oil Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Oil Search": {
      "main": [
        [
          {
            "node": "Oil Response Formatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Oil Response Formatter": {
      "main": [
        [
          {
            "node": "Telegram Oil Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Mood Request": {
      "main": [
        [
          {
            "node": "Get All Oils",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Oils": {
      "main": [
        [
          {
            "node": "AI Agent Fast",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Fast",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Fast": {
      "main": [
        [
          {
            "node": "Telegram AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "main-bot-v1",
  "id": "main-bot-workflow"
} 