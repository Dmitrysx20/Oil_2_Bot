// üß™ –¢–ï–°–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò SUPABASE
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

const { 
  checkNodeVersion, 
  diagnoseSupabaseIssues, 
  safeSupabaseConnection,
  updateSupabaseConfig 
} = require('./supabase_upgrade_fix.js');

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Supabase...\n');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
console.log('üìã –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js');
const nodeVersionOk = checkNodeVersion();
console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${nodeVersionOk ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}\n`);

// –¢–µ—Å—Ç 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
console.log('üìã –¢–ï–°–¢ 2: –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
const diagnosis = diagnoseSupabaseIssues();
console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
console.log(`- –í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º: ${diagnosis.totalIssues}`);
console.log(`- –û—à–∏–±–∫–∏: ${diagnosis.hasErrors ? '‚ùå –ï—Å—Ç—å' : '‚úÖ –ù–µ—Ç'}`);
console.log(`- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${diagnosis.hasWarnings ? '‚ö†Ô∏è –ï—Å—Ç—å' : '‚úÖ –ù–µ—Ç'}`);

if (diagnosis.issues.length > 0) {
  console.log('\nüìù –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:');
  diagnosis.issues.forEach((issue, index) => {
    console.log(`${index + 1}. ${issue.type.toUpperCase()}: ${issue.message}`);
    console.log(`   –†–µ—à–µ–Ω–∏–µ: ${issue.solution}`);
  });
}
console.log('');

// –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('üìã –¢–ï–°–¢ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
try {
  const config = updateSupabaseConfig();
  console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  console.log(`- URL: ${config.supabaseUrl}`);
  console.log(`- Timeout: ${config.timeout}ms`);
  console.log(`- Retry attempts: ${config.retryAttempts}`);
} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`);
}
console.log('');

// –¢–µ—Å—Ç 4: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (—Å–∏–º—É–ª—è—Ü–∏—è)
console.log('üìã –¢–ï–°–¢ 4: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
safeSupabaseConnection().then(result => {
  console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
  console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
  
  if (!result.success) {
    console.log('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    result.recommendations.forEach((rec, index) => {
      console.log(`${index + 1}. ${rec}`);
    });
  }
}).catch(error => {
  console.log(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
});

console.log('\nüéØ –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–û–í:');
console.log(`‚úÖ Node.js –≤–µ—Ä—Å–∏—è: ${nodeVersionOk ? '–°–æ–≤–º–µ—Å—Ç–∏–º–∞' : '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'}`);
console.log(`üîç –ü—Ä–æ–±–ª–µ–º—ã –Ω–∞–π–¥–µ–Ω—ã: ${diagnosis.totalIssues}`);
console.log(`üöÄ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–±–æ—Ç–µ: ${diagnosis.hasErrors ? '‚ùå –¢—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è' : '‚úÖ –ì–æ—Ç–æ–≤'}`); 