/**
 * üåø Smart Router - –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ê—Ä–æ–º–∞-–ü–æ–º–æ—â–Ω–∏–∫–∞
 * 
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Ö —Ç–∏–ø
 * –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.
 */

class SmartRouter {
  constructor() {
    this.requestTypes = {
      START_COMMAND: 'start_command',
      HELP_COMMAND: 'help_command',
      MENU_COMMAND: 'menu_command',
      OIL_SEARCH: 'oil_search',
      MOOD_REQUEST: 'mood_request',
      SUBSCRIPTION_INQUIRY: 'subscription_inquiry',
      SUBSCRIPTION_CONFIRMATION: 'subscription_confirmation',
      MUSIC_REQUEST: 'music_request',
      GREETING: 'greeting',
      UNKNOWN: 'unknown',
      ERROR: 'error'
    };

    this.oilKeywords = [
      '–ª–∞–≤–∞–Ω–¥–∞', '—ç–≤–∫–∞–ª–∏–ø—Ç', '–º—è—Ç–∞', '–ª–∏–º–æ–Ω', '–∞–ø–µ–ª—å—Å–∏–Ω', '—Ä–æ–∑–∞', '–∂–∞—Å–º–∏–Ω',
      '—á–∞–π–Ω–æ–µ –¥–µ—Ä–µ–≤–æ', '—Ä–æ–∑–º–∞—Ä–∏–Ω', '–≥–µ—Ä–∞–Ω—å', '–±–µ—Ä–≥–∞–º–æ—Ç', '–∏–ª–∞–Ω–≥', '–ø–∞—á—É–ª–∏',
      '—Å–∞–Ω–¥–∞–ª', '–∫–µ–¥—Ä', '—Å–æ—Å–Ω–∞', '–º–æ–∂–∂–µ–≤–µ–ª—å–Ω–∏–∫', '–ª–µ–º–æ–Ω–≥—Ä–∞—Å—Å', '–±–∞–∑–∏–ª–∏–∫',
      '–æ—Ä–µ–≥–∞–Ω–æ', '—Ç–∏–º—å—è–Ω', '–º–µ–ª–∏—Å—Å–∞', '—Ä–æ–º–∞—à–∫–∞', '–∫–∞–ª–µ–Ω–¥—É–ª–∞', '—à–∞–ª—Ñ–µ–π',
      '–≥—Ä–µ–π–ø—Ñ—Ä—É—Ç', '–ª–∞–π–º', '–º–∞–Ω–¥–∞—Ä–∏–Ω', '–Ω–µ—Ä–æ–ª–∏', '–ø–µ—Ç–∏—Ç–≥—Ä–µ–π–Ω', '–≤–µ—Ç–∏–≤–µ—Ä'
    ];

    this.moodKeywords = {
      '—Å—Ç—Ä–µ—Å—Å': ['—Å—Ç—Ä–µ—Å—Å', '–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ', '–Ω–µ—Ä–≤—ã', '—Ç—Ä–µ–≤–æ–≥', '–±–µ—Å–ø–æ–∫–æ–π', '–≤–æ–ª–Ω–µ–Ω'],
      '—É—Å—Ç–∞–ª–æ—Å—Ç—å': ['—É—Å—Ç–∞–ª', '—É—Å—Ç–∞–ª–æ—Å—Ç—å', '—Å–∏–ª –Ω–µ—Ç', '–≤—ã–º–æ—Ç–∞–Ω', '–∏–∑–º–æ–∂–¥–µ–Ω', '—ç–Ω–µ—Ä–≥–∏–∏ –Ω–µ—Ç'],
      '–≥—Ä—É—Å—Ç—å': ['–≥—Ä—É—Å—Ç–Ω', '–ø–µ—á–∞–ª—å', '—Ç–æ—Å–∫', '–¥–µ–ø—Ä–µ—Å—Å', '—É–Ω—ã–Ω–∏', '–ø–ª–æ—Ö–æ –Ω–∞ –¥—É—à–µ'],
      '–±–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞': ['–Ω–µ —Å–ø–ª—é', '–±–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞', '–Ω–µ –∑–∞—Å—ã–ø–∞—é', '–ø–ª–æ—Ö–æ —Å–ø–ª—é', '–ø—Ä–æ—Å—ã–ø–∞—é—Å—å'],
      '—ç–Ω–µ—Ä–≥–∏—è': ['—ç–Ω–µ—Ä–≥–∏–∏', '—ç–Ω–µ—Ä–≥–∏—è', '–±–æ–¥—Ä–æ—Å—Ç—å', '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '—Å–∏–ª—ã', '–º–æ—Ç–∏–≤–∞—Ü–∏—è', '–Ω—É–∂–Ω–∞ —ç–Ω–µ—Ä–≥–∏—è'],
      '—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ': ['—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ', '—Ä–µ–ª–∞–∫—Å', '—Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ', '—É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ'],
      '—Ä–∞–¥–æ—Å—Ç—å': ['—Ä–∞–¥–æ—Å—Ç—å', '–≤–µ—Å–µ–ª—å–µ', '–ø–æ–∑–∏—Ç–∏–≤', '—Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '—Å—á–∞—Å—Ç—å–µ']
    };

    this.subscriptionKeywords = [
      '–ø–æ–¥–ø–∏—Å', '—É–≤–µ–¥–æ–º–ª–µ–Ω', '—Ä–∞—Å—Å—ã–ª–∫', '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω', '–ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      '–æ—Ç–ø–∏—Å', '–æ—Ç–∫–ª—é—á —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–Ω–∞—Å—Ç—Ä–æ–π–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
    ];

    this.musicKeywords = [
      '–º—É–∑—ã–∫–∞', '–ø–µ—Å–Ω—è', '–ø–ª–µ–π–ª–∏—Å—Ç', '–ø–æ—Å–ª—É—à–∞—Ç—å', '–∫–æ–º–ø–æ–∑–∏—Ü–∏—è', '—Ç—Ä–µ–∫',
      'spotify', 'youtube', 'apple music', 'yandex music', '–≤–∫–ª—é—á–∏ –º—É–∑—ã–∫—É'
    ];

    this.greetingKeywords = [
      '–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä', '—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä'
    ];
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Object} input - –í—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
   * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å —Ç–∏–ø–æ–º –∑–∞–ø—Ä–æ—Å–∞ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
   */
  analyzeRequest(input) {
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (!input || !input.json) {
        return this.createErrorResponse('No input data');
      }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback queries
      if (input.json.callback_query) {
        return this.handleCallbackQuery(input.json.callback_query);
      }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      const rawText = (input.json.message?.text || '').trim();
      const chatId = input.json.message?.chat?.id || 'unknown';
      const userName = input.json.message?.from?.first_name || 'User';

      if (!rawText) {
        return this.createErrorResponse('No text provided', chatId);
      }

      // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
      const normalizedText = this.normalizeText(rawText);

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
      const requestType = this.determineRequestType(rawText, normalizedText);
      const metadata = this.extractMetadata(rawText, normalizedText, requestType);

      return {
        originalText: rawText,
        normalizedText: normalizedText,
        requestType: requestType,
        chatId: chatId,
        userName: userName,
        ...metadata,
        timestamp: new Date().toISOString()
      };

    } catch (error) {
      console.error('SmartRouter error:', error);
      return this.createErrorResponse('Processing error');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ callback queries
   * @param {Object} callbackQuery - –î–∞–Ω–Ω—ã–µ callback query
   * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
   */
  handleCallbackQuery(callbackQuery) {
    const callbackData = callbackQuery.data || '';
    const chatId = callbackQuery.message.chat.id;
    const userName = callbackQuery.from.first_name || 'User';

    return {
      originalText: `callback:${callbackData}`,
      requestType: 'callback_query',
      chatId: chatId,
      userName: userName,
      callbackData: callbackData,
      callbackQueryId: callbackQuery.id
    };
  }

  /**
   * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   */
  normalizeText(text) {
    return text.toLowerCase()
      .replace(/[.,!?;:()\\\"]/g, ' ')
      .replace(/\\s+/g, ' ')
      .trim();
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
   * @param {string} rawText - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @param {string} normalizedText - –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞
   */
  determineRequestType(rawText, normalizedText) {
    // –ö–æ–º–∞–Ω–¥—ã
    if (rawText.startsWith('/')) {
      return this.analyzeCommand(rawText);
    }

    // –ü–æ–∏—Å–∫ –º–∞—Å–µ–ª
    if (this.containsOilKeywords(normalizedText)) {
      return this.requestTypes.OIL_SEARCH;
    }

    // –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    if (this.containsMoodKeywords(normalizedText)) {
      return this.requestTypes.MOOD_REQUEST;
    }

    // –ü–æ–¥–ø–∏—Å–∫–∏
    if (this.containsSubscriptionKeywords(normalizedText)) {
      return this.requestTypes.SUBSCRIPTION_INQUIRY;
    }

    // –ú—É–∑—ã–∫–∞
    if (this.containsMusicKeywords(normalizedText)) {
      return this.requestTypes.MUSIC_REQUEST;
    }

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (this.containsGreetingKeywords(normalizedText)) {
      return this.requestTypes.GREETING;
    }

    return this.requestTypes.UNKNOWN;
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥
   * @param {string} text - –¢–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
   * @returns {string} –¢–∏–ø –∫–æ–º–∞–Ω–¥—ã
   */
  analyzeCommand(text) {
    const command = text.split(' ')[0];
    
    switch (command) {
      case '/start':
        return this.requestTypes.START_COMMAND;
      case '/help':
        return this.requestTypes.HELP_COMMAND;
      case '/menu':
        return this.requestTypes.MENU_COMMAND;
      default:
        return 'unknown_command';
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –º–∞—Å–µ–ª
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  containsOilKeywords(text) {
    return this.oilKeywords.some(keyword => text.includes(keyword));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  containsMoodKeywords(text) {
    return Object.values(this.moodKeywords).some(keywords =>
      keywords.some(keyword => text.includes(keyword))
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  containsSubscriptionKeywords(text) {
    return this.subscriptionKeywords.some(keyword => text.includes(keyword));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –º—É–∑—ã–∫–∏
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  containsMusicKeywords(text) {
    return this.musicKeywords.some(keyword => text.includes(keyword));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  containsGreetingKeywords(text) {
    return this.greetingKeywords.some(keyword => text.includes(keyword));
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
   * @param {string} rawText - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @param {string} normalizedText - –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @param {string} requestType - –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞
   * @returns {Object} –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
   */
  extractMetadata(rawText, normalizedText, requestType) {
    const metadata = {};

    switch (requestType) {
      case this.requestTypes.OIL_SEARCH:
        metadata.oilName = this.extractOilName(rawText);
        break;

      case this.requestTypes.MOOD_REQUEST:
        metadata.mood = this.extractMood(rawText);
        metadata.keywords = ['–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '—ç–º–æ—Ü–∏–∏'];
        break;

      case this.requestTypes.SUBSCRIPTION_INQUIRY:
        metadata.keywords = ['–ø–æ–¥–ø–∏—Å–∫–∞'];
        break;

      case this.requestTypes.MUSIC_REQUEST:
        metadata.keywords = ['–º—É–∑—ã–∫–∞'];
        break;
    }

    return metadata;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞—Å–ª–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string|null} –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Å–ª–∞
   */
  extractOilName(text) {
    const foundOil = this.oilKeywords.find(oil => 
      text.toLowerCase().includes(oil.toLowerCase())
    );
    return foundOil || text;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
   */
  extractMood(text) {
    return text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ
   * @param {string} error - –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
   * @param {string} chatId - ID —á–∞—Ç–∞
   * @returns {Object} –û—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
   */
  createErrorResponse(error, chatId = 'unknown') {
    return {
      originalText: '',
      requestType: this.requestTypes.ERROR,
      chatId: chatId,
      error: error
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ n8n
module.exports = SmartRouter; 