/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç —Ö–µ—à—Ç–µ–≥–æ–≤ –∏ markdown-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

/**
 * –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç —Ö–µ—à—Ç–µ–≥–æ–≤ (###, ##, #, ####)
 * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
 * @returns {string} –û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
function removeHashtags(text) {
  if (!text) return text;
  
  // –£–¥–∞–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏ (####, ###, ##, #) –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
  return text.replace(/^#{1,4}\s*/gm, '');
}

/**
 * –û—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç markdown-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
 * @returns {string} –û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
function removeMarkdown(text) {
  if (!text) return text;
  
  return text
    // –£–¥–∞–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏
    .replace(/^#{1,4}\s*/gm, '')
    // –£–¥–∞–ª—è–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç **—Ç–µ–∫—Å—Ç**
    .replace(/\*\*(.*?)\*\*/g, '$1')
    // –£–¥–∞–ª—è–µ–º –∫—É—Ä—Å–∏–≤ *—Ç–µ–∫—Å—Ç*
    .replace(/\*(.*?)\*/g, '$1')
    // –£–¥–∞–ª—è–µ–º –∫–æ–¥ `—Ç–µ–∫—Å—Ç`
    .replace(/`(.*?)`/g, '$1')
    // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏ [—Ç–µ–∫—Å—Ç](url)
    .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1')
    // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    .replace(/\n\s*\n/g, '\n\n')
    .trim();
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è Telegram –±–µ–∑ —Ö–µ—à—Ç–µ–≥–æ–≤
 * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
function formatForTelegram(text) {
  if (!text) return text;
  
  // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏
  let cleaned = removeHashtags(text);
  
  // –ó–∞–º–µ–Ω—è–µ–º markdown –Ω–∞ emoji –∏ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
  cleaned = cleaned
    // –ó–∞–º–µ–Ω—è–µ–º **—Ç–µ–∫—Å—Ç** –Ω–∞ —ç–º–æ–¥–∑–∏ + —Ç–µ–∫—Å—Ç
    .replace(/\*\*(.*?)\*\*/g, 'üéØ $1')
    // –ó–∞–º–µ–Ω—è–µ–º *—Ç–µ–∫—Å—Ç* –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    .replace(/\*(.*?)\*/g, '$1')
    // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
    .replace(/^(–ê—Ä–æ–º–∞—Ç–µ—Ä–∞–ø–∏—è.*?)$/gm, 'üåø $1')
    .replace(/^(–≠—Ñ–∏—Ä–Ω—ã–µ –º–∞—Å–ª–∞:)$/gm, 'üåø $1')
    .replace(/^(–°–ø–æ—Å–æ–±—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.*?)$/gm, 'üí° $1')
    .replace(/^(–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.*?)$/gm, '‚ö†Ô∏è $1')
    .replace(/^(–†–µ—Ü–µ–ø—Ç—ã.*?)$/gm, 'üß¥ $1')
    .replace(/^(–ü–ª–∞–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.*?)$/gm, '‚è∞ $1');
  
  return cleaned.trim();
}

/**
 * –û—á–∏—â–∞–µ—Ç AI-–æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {string} aiResponse - –û—Ç–≤–µ—Ç –æ—Ç AI
 * @returns {string} –û—á–∏—â–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
 */
function cleanAIResponse(aiResponse) {
  if (!aiResponse) return aiResponse;
  
  // –£–¥–∞–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏ –∏ –ª–∏—à–Ω–µ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  let cleaned = removeHashtags(aiResponse);
  
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
  cleaned = cleaned.replace(/\n{3,}/g, '\n\n');
  
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
  cleaned = cleaned.replace(/^\s+/gm, '');
  
  return cleaned.trim();
}

module.exports = {
  removeHashtags,
  removeMarkdown,
  formatForTelegram,
  cleanAIResponse
};
