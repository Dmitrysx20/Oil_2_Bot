// üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–ö–ò SUPABASE –ö–õ–ò–ï–ù–¢–ê
// –û—à–∏–±–∫–∞: "at new SupabaseClient"

console.log('üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ Supabase –∫–ª–∏–µ–Ω—Ç–∞...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredEnvVars = {
  'SUPABASE_URL': process.env.SUPABASE_URL,
  'SUPABASE_ANON_KEY': process.env.SUPABASE_ANON_KEY,
  'SUPABASE_SERVICE_ROLE_KEY': process.env.SUPABASE_SERVICE_ROLE_KEY,
  'NODE_ENV': process.env.NODE_ENV,
  'RAILWAY_ENVIRONMENT': process.env.RAILWAY_ENVIRONMENT
};

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
console.log('=====================================');

let missingVars = [];
let validVars = [];

Object.entries(requiredEnvVars).forEach(([key, value]) => {
  if (value) {
    console.log(`‚úÖ ${key}: ${key.includes('KEY') ? '***' + value.slice(-4) : value}`);
    validVars.push(key);
  } else {
    console.log(`‚ùå ${key}: –ù–ï –ù–ê–°–¢–†–û–ï–ù`);
    missingVars.push(key);
  }
});

console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
console.log('========================');
console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${validVars.length}/${Object.keys(requiredEnvVars).length}`);
console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${missingVars.length}`);

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ SupabaseClient
console.log('\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ SupabaseClient:');
console.log('=====================================');

if (missingVars.includes('SUPABASE_URL') || missingVars.includes('SUPABASE_ANON_KEY')) {
  console.log('‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Supabase');
  console.log('   –≠—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É "at new SupabaseClient"');
  
  console.log('\nüîß –†–ï–®–ï–ù–ò–ï:');
  console.log('============');
  console.log('1. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway Dashboard:');
  console.log('   - SUPABASE_URL=https://your-project.supabase.co');
  console.log('   - SUPABASE_ANON_KEY=your-anon-key');
  console.log('   - SUPABASE_SERVICE_ROLE_KEY=your-service-role-key');
  
  console.log('\n2. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á–∏ –∏–∑ Supabase Dashboard:');
  console.log('   - –û—Ç–∫—Ä–æ–π—Ç–µ https://supabase.com/dashboard');
  console.log('   - –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç');
  console.log('   - Settings ‚Üí API');
  console.log('   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Project URL –∏ anon public key');
  
  console.log('\n3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
} else {
  console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Supabase –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
  
  // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
  try {
    const { createClient } = require('@supabase/supabase-js');
    
    const supabase = createClient(
      process.env.SUPABASE_URL,
      process.env.SUPABASE_ANON_KEY,
      {
        auth: {
          autoRefreshToken: true,
          persistSession: true,
          detectSessionInUrl: true
        }
      }
    );
    
    console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log(`üìä URL: ${process.env.SUPABASE_URL}`);
    console.log(`üîë Key: ***${process.env.SUPABASE_ANON_KEY.slice(-4)}`);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞:', error.message);
    console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL –∏–ª–∏ –∫–ª—é—á–∞');
    console.log('2. –ü—Ä–æ–µ–∫—Ç Supabase –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
    console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:');
console.log('=====================================');

if (process.env.SUPABASE_URL) {
  if (!process.env.SUPABASE_URL.includes('supabase.co')) {
    console.log('‚ö†Ô∏è  SUPABASE_URL –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –≤–∞–ª–∏–¥–Ω—ã–π URL Supabase');
  } else {
    console.log('‚úÖ SUPABASE_URL —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  }
}

if (process.env.SUPABASE_ANON_KEY) {
  if (!process.env.SUPABASE_ANON_KEY.startsWith('eyJ')) {
    console.log('‚ö†Ô∏è  SUPABASE_ANON_KEY –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω');
  } else {
    console.log('‚úÖ SUPABASE_ANON_KEY —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  }
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
console.log('==================');

if (missingVars.length > 0) {
  console.log('üîß –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:');
  console.log('1. –î–æ–±–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway Dashboard');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Supabase –ø—Ä–æ–µ–∫—Ç –∞–∫—Ç–∏–≤–µ–Ω');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π');
  console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
} else {
  console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway –Ω–∞ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏');
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
module.exports = {
  requiredEnvVars,
  missingVars,
  validVars,
  hasAllRequiredVars: missingVars.length === 0
};

console.log('\nüéØ –°—Ç–∞—Ç—É—Å: ' + (missingVars.length === 0 ? '‚úÖ –ì–û–¢–û–í' : '‚ùå –¢–†–ï–ë–£–ï–¢ –ù–ê–°–¢–†–û–ô–ö–ò')); 